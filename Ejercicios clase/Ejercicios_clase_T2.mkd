##Ejercicios Tema 2 

Sergio Cáceres Pintor

####Ejercicio 2.1 Calcular la disponibilidad del sistema si tenemos dos réplicas de cada elemento (en total 3 elementos en cada subsistema).


-> Disponibilidad Web:

· Disponibilidad Web1 = 85%
· Disponibilidad Web2 = 85%+(1-85%)*85% = 97.75%
· Disponibilidad Web3 = 97.75%+(1-97.75%)*85% = 99.6625%

-> Application:

· Application1 = 90%
· Application2 = 90%+(1-90)*90% = 99%
· Application3 = 99%+(1-99%)*90% = 99.9%

-> Database:

· Database1 = 99.9%
· Database2 = 99.9%+(1-99.9%)*99.9% = 99.9999%
· Database3 = 99.9999%+(1-99.9999%)*99.9% = 99.99999999%

-> DNS:

· DNS1 = 98%
· DNS2 = 98%+(1-98%)*98% = 99.96%
· DNS3 = 99.96%+(1-99.6%)*98% = 99.9992%

-> Firewall:

· Firewall1 = 85%
· Firewall2 = 85%+(1-85%)*85% = 97.75%
· Firewall3 = 97.75%+(1-97.75%)*85% = 99.6625%

-> Switch:

· Switch1 = 99%
· Switch2 = 99%+(1-99%)*99% = 99.99%
· Switch3 = 99.99%+(1-99.99%)*99% = 99.9999%

-> Data center:

· Data Center1 = 99.99%
· Data Center2 = 99.99%+(1-99.99%)*99.99% = 99.999999%
· Data Center3 = 99.999999%+(1-99.999999%)*99.99% = 100%

-> ISP:

· ISP1 = 95%
· ISP2 = 95%+(1-95%)*95% = 99.75%
· ISP3 = 99.75%+(1-99.75%)*95% = 99.9875%

-> Disponibilidad Total:

####· Disponibilidad total = 99.6625% \* 99.9% \* 99.99999999% \* 99.9992% \* 99.6625% \* 99.9999% \* 100% \* 99.9875% = 99.21351663%


####Ejercicio 2.2 Buscar frameworks y librerías para diferentes lenguajes que permitan hacer aplicaciones altamente disponibles con relativa facilidad. Como ejemplo, examina PM2 https://github.com/Unitech/pm2 que sirve para administrar clústeres de NodeJS.

JGroups es un sistema de multidifusión confiable escrito en el lenguaje Java. Se puede usar para crear clusters donde sus nodos pueden mandar mensajes entre ellos, sus características principales son:

· Detección de Membresía y notificación sobre nodos que se han unido, dejado o que se han caído del cluster.
· Detección y eliminación de nodos caidos.


####Ejercicio 2.3 ¿Cómo analizar el nivel de carga de cada uno de los subsistemas en el servidor? Buscar herramientas y aprender a usarlas. ...¡o recordar cómo usarlas!

Nagios es un sistema de monitorización de redes ampliamente utilizado, de código abierto, que vigila los equipos (hardware) y servicios (software) que se especifiquen, alertando cuando el comportamiento de los mismos no sea el deseado. Se trata de un software que proporciona una gran versatilidad para consultar prácticamente cualquier parámetro de interés de un sistema, y genera alertas, que pueden ser recibidas por los responsables correspondientes.

· Referencia: https://es.wikipedia.org/wiki/Nagios


####Ejercicio 2.4 Buscar ejemplos de balanceadores software y hardware (productos comerciales). Buscar productos comerciales para servidores de aplicaciones. Buscar productos comerciales para servidores de almacenamiento.


·Balanceadores Hardware:

-NetScaler de citrix  -->
    http://www.citrix.com/products/netscaler-application-delivery-controller/tech-info.html
-BIG-IP de F5 --> 
    https://f5.com/products/platforms/appliances

· Balanceadores Software:

-ZVA64 EE 3110 Virtual Appliance (Zen Load Balancer) --> 
    http://www.zenloadbalancer.com/products/zva64-ee3110-virtual-appliance/